#!/bin/sh
#
# chkconfig: 345 99 05
# description:  Start up the smpp-server engine.


#Setup:
#1: cp smpp-server  /etc/init.d/smpp-server
#2: chmod 750 /etc/init.d/smpp-server
#3: chkconfig --add smpp-server
#4: chkconfig smpp-server on
#Usage:
#Start service: service smpp-server start
#Stop service: service smpp-server stop

# Source function library.
. /etc/init.d/functions

RETVAL=$?

JAVA_HOME=/usr/java/latest
JAVA_OPTS="-Xms256m -Xmx2g"
PROGRAM_NAME=SMPP-Server
PROGRAM_HOME=/home/smsgateway/smpp-server
PROGRAM_PID=$PROGRAM_HOME/smpp-server.pid
PROGRAM_USER=smsgateway

DAEMON_START=$PROGRAM_HOME/smpp-server.sh

export JAVA_HOME
export PROGRAM_HOME
export PROGRAM_NAME
export PROGRAM_PID
export JAVA_OPTS

test -f $DAEMON || exit 0

set -e

function showpid()
{
    PID=`cat $PROGRAM_PID`
    echo "PID=$PID"
}
start(){
                echo "Start $PROGRAM_NAME Service!"
                su - $PROGRAM_USER -c "cd $PROGRAM_HOME; ./smpp-server.sh"
                touch /var/lock/subsys/smpp-server.pid
}
stop(){
                if [ -s $PROGRAM_HOME"/smpp-server.pid" ] #file containing pid exists
                then
                echo "Stop $PROGRAM_NAME Service!"
                set `cat $PROGRAM_HOME/smpp-server.pid`
                echo "Killing $PROGRAM_NAME Proccess. PID= $1"
                kill $1
                rm $PROGRAM_HOME/smpp-server.pid
                else
                echo "$PROGRAM_NAME not Started!"
                fi
                rm -f /var/lock/subsys/smpp-server.pid
}

case "$1" in
 start)
                start
        ;;
 stop)
                stop
        ;;
 status)
                if [ -s $PROGRAM_HOME"/smpp-server.pid" ]
                then
                        PID=`cat $PROGRAM_PID`
                        if `ps -p $PID > /dev/null` ;
                                then
                                echo "$PROGRAM_NAME is running, PID=$PID"
                        fi
        else
            echo "$PROGRAM_NAME is stopped"
        fi
        ;;
restart)
                stop && start
        ;;
 *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
exit $RETVAL
